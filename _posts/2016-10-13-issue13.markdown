---
layout: post
title:  "Issue #13"
date:   2016-10-13
---

Yet another week, yet another Swift 3.0.1 preview, this time it's
[Preview 3](https://swift.org/download/#releases).
[Swift Evolution status page](http://apple.github.io/swift-evolution/) was also
refined with more versions added to corresponding proposals. As for
Linux-specific stuff, there is a
[compiler PR](https://github.com/apple/swift/pull/5269) to support static
linking from [Simon Evans](https://github.com/spevans) with a corresponding
[Swift Jira issue](https://bugs.swift.org/browse/SR-2280). Please vote it up
if you would like to see working Swift executables that can be freely copied to any Linux box.


## Links

### [Logging in Server-Side Swift](https://medium.com/swiftybeaver-blog/logging-in-server-side-swift-85bdecb6be80#.eba3afv10) by [Sebastian Kreutzberger](https://twitter.com/skreutzb)

Here Sebastian describes his experience with porting
[SwiftyBeaver](https://swiftybeaver.com) library to Linux, adding
[Vapor](https://vapor.codes) support to it and also rewriting SwiftyBeaver website with
Vapor.

### [Contributing to the Server-Side Swift World](https://medium.com/@petrpavlik/contributing-to-the-server-side-swift-world-936155e4c812#.2tzl9wu6s) by [Petr Pavlik](https://twitter.com/ptrpavlik)

An article covering the basics of writing a simple cross-platform library
that supports both Linux and macOS, adding tests and setting it up with Travis.

### [Using Swift with gRPC](https://medium.com/@nathanborror/using-swift-and-grpc-5e8af5b97b9c#.7fuqms9qv) by [Nathan Borror](https://twitter.com/nathanborror)

Yet another attack on REST dominance, in addition to [GraphQL](http://graphql.org) I've mentioned
in [the previous issue](https://www.serverswift.tech/2016/10/04/issue12.html).
[gRPC](http://www.grpc.io) just got basic Swift support thanks to Apple's
[swift-protobuf](https://github.com/apple/swift-protobuf) library and Nathan's
[swift-grpc](https://github.com/nathanborror/swift-grpc).

### [Optional Non-Escaping Closures](https://oleb.net/blog/2016/10/optional-non-escaping-closures/) by [Ole Begemann](http://twitter.com/olebegemann)

Quite important article that clarifies behaviour of escaping closures that
[was changed in Swift 3.0](https://oleb.net/blog/2016/10/optional-non-escaping-closures/).
You might also be interested in reading [this article](https://swiftunboxed.com/lang/closures-escaping-noescape-swift3/) first.

### [Linux Benchmarks for Server-Side Swift vs Node.js](https://medium.com/@rymcol/linux-ubuntu-benchmarks-for-server-side-swift-vs-node-js-db52b9f8270b#.72ny1ydj7) by [Ryan Collins](https://twitter.com/rymcol)

The most comprehensive benchmark of server-side Swift frameworks is back. ðŸŽ‰
The main change is that it was reproduced on Linux.

### [Distribution Tests](http://dduan.net/2016/10/10/distribution-tests/) by [Daniel Duan](https://twitter.com/daniel_duan)

We all want our code to be well-tested, preferrably automatically. When you write a cross-platform library, you
also need to support multiple package managers. This article describes [a template](https://github.com/dduan/DistributionTests)
that can be used for testing builds of your library with CocoaPods, Carthage and
SwiftPM simultaneously.

### [What Even is a Container: Namespaces and Cgroups](https://jvns.ca/blog/2016/10/10/what-even-is-a-container/) by [Julia Evans](https://twitter.com/b0rk)

Since I started developing with Swift for Linux, I find [Docker](https://www.docker.com)
containers incredibly
useful for deployment and infrastructure setup. This article is the best explanation
I've seen of what a container is and how does it work.

### [Mastering Swift: Essential Details About Strings](https://rainsoft.io/mastering-swift-essential-details-about-strings/) by [Dmitri Pavlutin](https://twitter.com/panzerdp)

A thorough article about Swift's `String` API and Unicode support, up to date with Swift 3.0.

### [Unit Testing Vapor](https://seatoncode.com/unit-testing-vapor/) by [Stephen Seaton-Blanchard](https://github.com/Bored0ne)

A short example of a Vapor application with unit-tests, covers a few differences
in XCTest that need a special treatment on Linux when compared to macOS.

## Code

### [Vapor 1.1](https://github.com/vapor/vapor/releases/tag/1.1.0)

New release of [Vapor](https://vapor.codes) with fixes for TLS, improved
configuration, more flexible Provider API and other improvements.

### [VaporJWT](https://github.com/siemensikkema/vapor-jwt)

> VaporJWT is a library for JSON Web Tokens (JWT) designed with the following goals in mind:
>
> * clean API
> * native to Vapor
> * many features
> * highly extensible

### [Noze 0.5.0 - Evented I/O Streams for Swift](http://noze.io/swift301/)

> Noze.io is an attempt to carry over the Node.js ideas into pure Swift. It uses libdispatch for event-driven, non-blocking I/O. Noze.io is built around type-safe back-pressure aware pull-streams (using Swift generics) operating on batches of items.

## Lastly...

### [Happiness Can Be Photographed](https://twitter.com/bagrow/status/784066050941943808) ðŸ“¸
