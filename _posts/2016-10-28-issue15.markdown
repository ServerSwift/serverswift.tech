---
layout: post
title:  "Issue #15"
date:   2016-10-28
---

## Links

### [Swift.org - Server APIs Project](https://swift.org/server-apis/)

Definitely a great initiative to unify all the duplicated libraries we currently
have for URL parsing, HTTP parsing, encryption etc. As an example,
I had a problem this week trying to use a Swift library with Foundation's [`URL`](https://developer.apple.com/reference/foundation/url)
type from [Vapor](https://vapor.codes) with it's own [`URI`](https://github.com/vapor/engine/blob/master/Sources/URI/Model/URI.swift)
type. Wasn't fun, but is understandable, as Foundation didn't seem to be stable enough at
the time when Vapor's libraries were developed. Looking forward to improvements in this area.

There is also an accompanying [blog post](https://swift.org/blog/server-api-workgroup/)
by [Chris Bailey](https://twitter.com/Chris__Bailey).

### [Breaking Down the New Swift.org Server API Work Group](https://developer.ibm.com/swift/2016/10/25/breaking-down-the-new-swift-org-server-api-work-group/) <small>by [John Ponzo](https://twitter.com/john_ponzo)</small>




### [Full-Stack Swift - Part 2](https://blog.codecentric.de/en/2016/10/full-stack-swift-part-2/) <small>by [Milan Stevanovic](https://twitter.com/FathVader)</small>



### [CocoaPods on Linux. 100% of Tests Passing](https://twitter.com/segiddins/status/790326153051447296) <small>by [Samuel Giddins](https://twitter.com/segiddins)</small>



### [Swift on Linux](https://ashfurrow.com/blog/swift-on-linux/) <small>by [Ash Furrow](https://twitter.com/ashfurrow)</small>




### [Whole-Module Optimization in Swift 3](https://swift.org/blog/whole-module-optimizations/) <small>by [Erik Eckstein](https://github.com/eeckstein/)</small>



### [Linux Performance](http://www.brendangregg.com/linuxperf.html) <small>by [Brendan Gregg](https://twitter.com/brendangregg)



### [Swift ORM: "StORM"](https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide/StORM.md) <small>by [PerfectlySoft](https://twitter.com/perfectlysoft)</small>


### [Parsing JSON is a Minefield üí£](http://seriot.ch/parsing_json.html) <small>by [Nicolas Seriot](https://twitter.com/nst021)</small>

https://github.com/nst/STJSON

### [](https://github.com/bwhiteley/JSONShootout) <small>by [Nicolas Seriot](https://twitter.com/nst021)</small>

## Code

### [GraphQLSwift](https://github.com/GraphQLSwift/GraphQL) <small>by [Paulo Faria](https://twitter.com/paulofariarl)</small>

Finally, there is a [GraphQL](http://graphql.org) implementation for Linux üéâ

### [AlexaSkillsKit](https://github.com/choefele/AlexaSkillsKit) <small>by [Paulo Faria](https://twitter.com/paulofariarl)</small>

### [grpc-swift](https://github.com/grpc/grpc-swift) <small>by [Tim Burks](https://twitter.com/timburks)</small>

This is an official implementation of [gRPC](http://www.grpc.io) developed
under [gRPC GitHub organization](https://github.com/grpc) by a Google Employee.

## Lastly...

### [Pizza Man](https://twitter.com/_psycho_dad_/status/789135543363743744) üçï
